<snippet>
	<content><![CDATA[


class HLD{
  //for edge maximum query
  
  vector<int>parent,depth,head,heavy,pos,wts,vAtPos,t;
  int n,timer=0; 
  public : 
  vector<vector<pair<int,int>>> &adj;
  

  HLD(int nn,vector<vector<pair<int,int>>> &tadj,int root=1):adj(tadj){
    int n=nn+1;
    parent.resize(n);
    depth.resize(n);
    head.resize(n);
    pos.resize(n);
    vAtPos.resize(n);
    wts.resize(n);
    t.resize(4*n);
    heavy.assign(n,-1);
    
    dfs(root,parent);
    decompose(root,root);
    build(1,0,timer-1);
  }

  int dfs(int v,vector<int> &parent){
        
        int max_sub=0;
        int sz=1;

        for (auto x: adj[v])
        {   
          int c=x.fs;
          if(c==parent[v])continue;
          wts[c]=x.sc;
            parent[c]=v;depth[c]=depth[v]+1;
            
            int tmp_sub=dfs(c,parent);
            sz+=tmp_sub;

            if(tmp_sub>max_sub){
              max_sub=tmp_sub;
               heavy[v]=c;
            }
        }
       
        return sz;

  }

  void decompose(int v,int h){

       head[v]=h; pos[v]=timer++;vAtPos[pos[v]]=v;

       if(heavy[v]!=-1)decompose(heavy[v],h);

       for(auto c:adj[v]){
         if(c.fs!=parent[v] && c.fs!=heavy[v])decompose(c.fs,c.fs);
       }

  }

  int query(int a,int b){
    
    int res=0;
    while(head[a]!=head[b]) {
        
        if(depth[a]>depth[b])swap(a,b);
        res=max(res,sum(1,0,timer-1,pos[head[b]],pos[b]));

        b=parent[head[b]];

    }

    if(depth[a]>depth[b])swap(a,b);

    res=max(res,sum(1,0,timer-1,pos[a]+1,pos[b]));
    return res;    

  }

  
void build(int v,int tl,int tr){
  
   if(tl==tr){t[v]=wts[vAtPos[tl]]; return;}

   int mid=(tl+tr)/2;
   build(v*2,tl,mid);
   build(v*2+1,mid+1,tr);

   t[v]=max(t[v*2],t[v*2+1]);


}

 
int sum(int v, int tl, int tr, int l, int r) {
  
    if (l > r) 
        return 0;
    if (l == tl && r == tr) {
        return t[v];
    }
    int tm = (tl + tr) / 2;
    ll q= max(sum(v*2, tl, tm, l, min(r, tm))
           , sum(v*2+1, tm+1, tr, max(l, tm+1), r));
    return q;
    
}
 
};


]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<!-- <tabTrigger>hello</tabTrigger> -->
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->

	<tabTrigger>hld</tabTrigger>

	
</snippet>
